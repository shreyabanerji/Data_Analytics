#install.packages("zoo")
#install.packages("timeSeries")
#install.packages("tidyquant")
#reading the data
test_df = read.csv("DailyDelhiClimateTrain.csv", stringsAsFactors = FALSE)
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
plot(test_df$date,test_df$meantemp,types='lines')
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
plot(test_df$date,test_df$meantemp)
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
plot.ts(test_df$date,test_df$meantemp)
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
plot.ts(test_df$date,ts(test_df$meantemp))
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
plot(test_df$date~as.Date(sales$date,"%d/%m/%y"),type="l",
xlab="Date",ylab="Units Sold")
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
plot(test_df$meantemp~as.Date(test_df$date,"%d/%m/%y"),type="l",
xlab="Date",ylab="Units Sold")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("pracma")
#reading the data
test_df = read.csv("DailyDelhiClimateTrain.csv")
print(test_df)
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
plot(test_df$date,test_df$meantemp)
ptsSpline = approx(test_df$date,test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Spline"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
library("pracma")
width = 10
avg = movavg(test_df$meantemp, n=width, type=c("s"))
plot(test_df$date,avg)
ptsSpline = approx(test_df$date,test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Spline"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#(ii)
#shreya, idk what to add as the second parameter in the moveavg function
avg <- movavg(test_df$meantemp, 50, "w");
plot(test_df$date,avg)
ptsSpline = approx(test_df$date,test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Spline"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#NEED TO LOOK INTO THE OBSERTIONS
#DO THIS PROPERLY
library(boot)
samp_mean <- function(x, i) {
mean(x[i])
}
#HOW DO YOU HOURLY RESAMPLE THE DATA ? IT IS IN DAY FORMAT
bootC <- boot(test_df$meantemp,samp_mean, R=999)#,statistic=mean,R=1000)
bootC
#assuming we have the monthly resampled data in train_df
#just assuming
#let's get the trend, seasonality and residual
#install.packages("forecast")
library(forecast)
#Ref:https://anomaly.io/seasonal-trend-decomposition-in-r/index.html
#additive trend part
trend = ma(test_df$meantemp, order = 100, centre = T)
#normal plot
plot(as.ts(test_df$meantemp))
#trend plot
lines(trend,col="blue", lwd=2)
#seasonality
m = t(matrix(data = test_df$meantemp, nrow = 3))
seasonal = colMeans(m, na.rm = T)
plot(as.ts(rep(seasonal,16)))
#residuals
random = test_df$meantemp - trend - seasonal
plot(as.ts(random))
#reconstructing to check
recomposed_beer = trend+seasonal+random
plot(as.ts(recomposed_beer))
#NOTE: SEEMS TO BE AN ADDITIVE SERIES
#ref: https://datascience.stackexchange.com/questions/20371/plot-of-acf-pacf
#I have then decomposed the series to obtain the seasonal component from it. Subtracted the seasonal component from it to deseasonalize it.
#CHECK THIS ONCE
data = test_df$meantemp - seasonal
acf(data)
pacf(data)
#ref: https://towardsdatascience.com/stationarity-in-time-series-analysis-90c94f27322
#ref https://towardsdatascience.com/detecting-stationarity-in-time-series-data-d29e0a21e638
#i am not sure what stationary means yet.
#shreya check it out once plz
#ref: http://dwoll.de/rexrepos/posts/diagSplines.html
ts<-ts(test_df$meantemp)
plot(ts)
plot(test_df$meantemp~as.Date(test_df$date,"%d/%m/%y"),type="l",
xlab="Date",ylab="Units Sold")
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = movavg(test_df$meantemp, n=width, type=c("s"))
plot(test_df$date,avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$date,test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(test_df$date,avg_wma,xlab='Time',ylab='Temperature')
ptsSpline2 = approx(test_df$date,test_df$meantemp)
lines(ptsSpline2, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = movavg(test_df$meantemp, n=width, type=c("s"))
plot(test_df$date,avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$date,test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(test_df$date,avg_wma,xlab='Time',ylab='Temperature')
ptsSpline2 = approx(test_df$date,test_df$meantemp)
lines(ptsSpline2, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
knitr::opts_chunk$set(echo = TRUE)
#install.packages("pracma")
#install.packages("forecast")
#install.packages("TTR")
#install.packages("resample")
#install.packages("tseries")
#install.packages("sarima")
#install.packages("stats")
#install.packages("xts")
#install.packages(c("Mcomp", "smooth"))
#install.packages("astsa")
#install.packages("caret")
#install.packages("zoo")
#install.packages("timeSeries")
#install.packages("tidyquant")
#reading the data
test_df = read.csv("DailyDelhiClimateTrain.csv", stringsAsFactors = FALSE)
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = movavg(test_df$meantemp, n=width, type=c("s"))
plot(test_df$date,avg,xlab='Time',ylab='Temperature')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(test_df$date,avg,xlab='Time',ylab='Temperature')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$date,test_df$meantemp)
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
avg
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$date,test_df$meantemp)
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
avg
plot(avg,xlab='Time',ylab='Temperature')
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(test_df$date,avg_wma,xlab='Time',ylab='Temperature')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
avg
plot(avg,xlab='Time',ylab='Temperature')
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
avg
plot(avg,xlab='Time',ylab='Temperature')
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature',type='lines')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(ts)
lines(avg,xlab='Time',ylab='Temperature')
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature',type='lines')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
lines(avg,xlab='Time',ylab='Temperature')
#let's get the trend, seasonality and residual
#install.packages("forecast")
library(forecast)
#Ref:https://anomaly.io/seasonal-trend-decomposition-in-r/index.html
#additive trend part
trend = ma(ts_m$mean_temp_month, order = 7, centre = T)
#normal plot
plot(as.ts(ts_m$mean_temp_month),ylab='Tempearature')
#trend plot
lines(trend,col="blue", lwd=2)
legend(x="topleft", c("Data", "Trend"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#seasonality
m = t(matrix(data = ts_m$mean_temp_month, nrow = 7))
seasonal = colMeans(m, na.rm = T)
plot(as.ts(rep(seasonal,16)),ylab='Seasonality')
#residuals
random = ts_m$mean_temp_month - trend - seasonal
plot(as.ts(random),ylab='residuals')
#reconstructing to check
recomposed_add = trend+random+seasonal
#recomposed_mul=trend*random*seasonal
plot(as.ts(recomposed_add))
#plot(as.ts(recomposed_mul))
#It is an additive series.
library(Metrics)
library(forecast)
library(fracdiff)
forecasted_data<-forecast(ar,h=114)
forecasted_data
plot(forecasted_data)
#the forecasted values seem to be following the general trend
# define 3 data sets
xdata <- sort(test_data$date)
y1 <- test_data$meantemp
y2 <- forecasted_data$mean
plot(xdata, y1, type="lines", col="blue", pch="o",ylim=c(0,40))
points(xdata, y2, col="red", pch="*",type='lines')
legend(x="topleft", c("OriginalData", "Forecasted Data"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "red"), bg="white")
rmse(y1,y2)
#4.35736
set.seed(250)
library(stats)
library(sarima)
library(forecast)
library(astsa)
test_data = read.csv("DailyDelhiClimateTest.csv")
a=test_df$meantemp
a <- ts(test_df$meantemp, start=c(2013, 1), end=c(2017, 1), frequency=365)
#Looking at the ACF plot after 1st order differential(d=1),p=3(number of spikes in PACF graph)and q=1(number of spikes in ACF graph) seems to be the best parameters.
ar<-auto.arima(a,seasonal=TRUE)
#auto.arima automatically finds the best parameters for ARIMA model(using AIC,BIC and other metrics) along with the seasonal component
ar
#BestParameters: ARIMA(3,1,1)(0,1,0)[365]
library(Metrics)
library(forecast)
library(fracdiff)
forecasted_data<-forecast(ar,h=114)
forecasted_data
plot(forecasted_data)
#the forecasted values seem to be following the general trend
# define 3 data sets
xdata <- sort(test_data$date)
y1 <- test_data$meantemp
y2 <- forecasted_data$mean
plot(xdata, y1, type="lines", col="blue", pch="o",ylim=c(0,40))
points(xdata, y2, col="red", pch="*",type='lines')
legend(x="topleft", c("OriginalData", "Forecasted Data"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "red"), bg="white")
rmse(y1,y2)
#4.35736
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$date,test_df$meantemp)
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(test_df$date,avg_wma,xlab='Time',ylab='Temperature')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(,avg_wma,xlab='Time',ylab='Temperature')
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature')
ptsSpline2 = approx(test_df$meantemp)
lines(ptsSpline2, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature',type='lines')
ptsSpline2 = approx(test_df$meantemp)
lines(ptsSpline2, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature',type='lines')
print(avg_wma)
ptsSpline2 = approx(test_df$meantemp)
lines(ptsSpline2, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature',type='lines')
print(head(avg_wma,50))
ptsSpline2 = approx(test_df$meantemp)
lines(ptsSpline2, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
#https://www.rdocumentation.org/packages/pracma/versions/1.9.9/topics/movavg
#http://macs.citadel.edu/wittman/490/Lectures/Lec3_490.pdf
#(i)
require(smooth)
require(Mcomp)
library("pracma")
library("TTR")
width = 10
avg = ts(movavg(test_df$meantemp, n=width, type=c("s")))
print(head(avg,50))
plot(avg,xlab='Time',ylab='Temperature')
ptsSpline = approx(test_df$meantemp)
lines(ptsSpline, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),lwd=c(5,2),
col=c("black", "blue"), bg="white")
#(ii)
avg_wma<-WMA(test_df$meantemp, n = 10, wts = c(1.5, .5, 1, 0.5, 0.5, 0.5, 0.5, 1, 1.5, 1.5))
plot(avg_wma,xlab='Time',ylab='Temperature',type='lines')
print(head(avg_wma,50))
ptsSpline2 = approx(test_df$meantemp)
lines(ptsSpline2, col="blue", lwd=2)
legend(x="topleft", c("Data", "Filtered"),
pch=c(16, NA), lty=c(NA,1),
col=c("black", "blue"), bg="white")
